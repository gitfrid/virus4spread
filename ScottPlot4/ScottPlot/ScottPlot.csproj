<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>net8.0-windows</TargetFrameworks>
        <LangVersion>11</LangVersion>

        <OutputType>Library</OutputType>
        <PlatformTarget>x64</PlatformTarget>
        <ApplicationIcon>icon.ico</ApplicationIcon>
        <PackageIcon>icon.png</PackageIcon>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <Description>ScottPlot is a free and open-source plotting library for .NET. This package can be used to create static plots, and user controls for interactively displaying plots in WinForms, WPF, or Avalonia applications are available as separate NuGet packages.</Description>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageProjectUrl>ScottPlot.NET</PackageProjectUrl>
        <PackageTags>plot graph data chart signal line bar heatmap scatter</PackageTags>
        <PackageReleaseNotes>ScottPlot.NET/changelog</PackageReleaseNotes>
        <Version>4.1.69</Version>
        <AssemblyVersion>4.1.69.0</AssemblyVersion>
        <FileVersion>4.1.69.0</FileVersion>
        <SignAssembly>true</SignAssembly>
        <DelaySign>false</DelaySign>
        <AssemblyOriginatorKeyFile>C:\github\certs\gitfridKeypair.snk</AssemblyOriginatorKeyFile>
        <Authors>Scott Harden</Authors>
        <Company>Harden Technologies, LLC</Company>
        <RepositoryUrl>github.com/ScottPlot/ScottPlot</RepositoryUrl>
        <DocumentationFile>ScottPlot.xml</DocumentationFile>
        <NoWarn>1591</NoWarn>
        <DebugType>portable</DebugType>
        <IncludeSymbols>False</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <Deterministic>true</Deterministic>
        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>

        <!-- obvlivious reference types -->
        <!-- Missing XML comment -->
        <!-- Optional parameter back compat -->
        <!-- Multiple overloads back compat -->
        <NoWarn>RS0041;CS1591;RS0027;RS0026</NoWarn>
        <Configurations>Debug;Release;x64</Configurations>
        <Platforms>AnyCPU;x64</Platforms>
        <GenerateDocumentationFile>False</GenerateDocumentationFile>

    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='x64|net8.0-windows|AnyCPU'">
      <Optimize>False</Optimize>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='x64|net8.0-windows|x64'">
      <Optimize>False</Optimize>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-windows|AnyCPU'">
      <Optimize>True</Optimize>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-windows|x64'">
      <Optimize>True</Optimize>
    </PropertyGroup>

    <ItemGroup>

        <!-- 
            The PublicApiAnalyzers throws tons of warnings if a change was made to the public API.
            In theory this makes it easy to ensure code modifications don't break existing code.
            In practice, this makes it frustrating and difficult for contributors to intentionally
            add or modify the public API. It turned-out to be more trouble than it was worth, so
            I'm disabling it.
        -->
        <PackageReference Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" Version="3.3.3" Condition="false">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="System.Drawing.Common" Version="4.7.2" />
        <PackageReference Include="System.Numerics.Vectors" Version="4.5.0" />

        <!-- Code analysis -->

        <!-- 
            Keep System.Drawing.Common version at 4.6.1 and users can upgrade it if they wish.
            Upgrading may improve font rendering on Linux and MacOS, but upgrading then downgrading 
            is associated with assembly issues that break .NET Framework projects on Windows.
            https://github.com/ScottPlot/ScottPlot/issues/1004
        -->
        <None Include="icon.png" Pack="true" PackagePath="\" />
        <None Include="icon.ico" Pack="true" PackagePath="\" />
        <None Include="README.md" Pack="true" PackagePath="\" />
    </ItemGroup>
   
    <!-- .NET Framework 4.6.1 requires packages to support C# 7 features -->
    <ItemGroup Condition="'$(TargetFramework)' == 'net462'">
        <PackageReference Include="System.ValueTuple" Version="4.5.0" />
        <PackageReference Include="System.Runtime.InteropServices.RuntimeInformation" Version="4.3.0" />
    </ItemGroup>

</Project>
